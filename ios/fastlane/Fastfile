default_platform(:ios)

platform :ios do
  desc "Fetch certificates and provisioning profiles"
  lane :certificates do
    setup_ci if ENV['CI']
    match(type: "appstore", readonly: true)
  end
  
  desc "Build and upload to TestFlight"
  lane :beta do
    setup_ci if ENV['CI']
    certificates
    
    # Clean build folder
    clear_derived_data
    
    # Increment build number
    increment_build_number(xcodeproj: "PureHeart.xcodeproj")
    
    # Get provisioning profile name from Match
    profile_name = ENV["sigh_com.100klabs.pureheart_appstore_profile-name"] || "match AppStore com.100klabs.pureheart"
    
    # Build the app with explicit signing
    build_app(
      workspace: "PureHeart.xcworkspace",
      scheme: "PureHeart",
      configuration: "Release",
      clean: true,
      export_method: "app-store",
      export_options: {
        method: "app-store",
        provisioningProfiles: {
          "com.100klabs.pureheart" => profile_name
        },
        signingStyle: "manual",
        uploadBitcode: false,
        uploadSymbols: true,
        compileBitcode: false,
        teamID: "U8M48L26Z9"
      },
      xcargs: "CODE_SIGN_STYLE=Manual PROVISIONING_PROFILE_SPECIFIER='#{profile_name}' DEVELOPMENT_TEAM=U8M48L26Z9"
    )
    
    upload_to_testflight(
      skip_waiting_for_build_processing: true,
      distribute_external: false,
      notify_external_testers: false
    )
  end
  
  desc "Generate new certificates and profiles"
  lane :generate_certs do
    match(type: "appstore", force_for_new_devices: true)
  end
  
  desc "Sync certificates for development"
  lane :sync_certs do
    setup_ci if ENV['CI']
    match(type: "development", readonly: true)
    match(type: "appstore", readonly: true)
  end
  
  desc "Register new device and regenerate profiles"
  lane :add_device do |options|
    device_name = options[:name] || prompt(text: "Device Name: ")
    device_udid = options[:udid] || prompt(text: "Device UDID: ")
    
    register_devices(
      devices: {
        device_name => device_udid
      }
    )
    
    match(type: "development", force_for_new_devices: true)
  end
end
