name: iOS TestFlight Deployment

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types: [closed]
  workflow_dispatch: # Manual trigger

jobs:
  build-and-deploy-ios:
    if: github.event_name == 'workflow_dispatch' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true) || github.event_name == 'push'
    runs-on: macos-latest
    
    env:
      APPSTORE_ISSUER_ID: ${{ secrets.APPSTORE_ISSUER_ID }}
      APPSTORE_KEY_ID: ${{ secrets.APPSTORE_KEY_ID }}
      APPSTORE_PRIVATE_KEY: ${{ secrets.APPSTORE_PRIVATE_KEY }}
      FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
      FASTLANE_USER: ${{ secrets.FASTLANE_USER }}
      IOS_BUNDLE_ID: ${{ secrets.IOS_BUNDLE_ID }}
      IOS_TEAM_ID: ${{ secrets.IOS_TEAM_ID }}
      MATCH_GIT_TOKEN: ${{ secrets.MATCH_GIT_TOKEN }}
      MATCH_GIT_URL: ${{ secrets.MATCH_GIT_URL }}
      MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
      NODE_VERSION: ${{ secrets.NODE_VERSION }}
      RUBY_VERSION: ${{ secrets.RUBY_VERSION }}
      
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: false

      - name: Cache Node Modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Cache Pods
        uses: actions/cache@v4
        with:
          path: ios/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Install Node Dependencies
        run: npm ci

      - name: Install Bundler
        run: gem install bundler

      - name: Install Fastlane Dependencies
        run: |
          cd fastlane
          bundle install

      - name: Install CocoaPods
        run: |
          cd ios
          pod install --repo-update

      - name: Setup Keychain
        run: |
          security create-keychain -p "${{ secrets.MATCH_PASSWORD }}" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "${{ secrets.MATCH_PASSWORD }}" build.keychain
          security set-keychain-settings -t 3600 -u build.keychain

      - name: Build and Deploy to TestFlight
        run: |
          cd ios
          bundle exec fastlane beta
        env:
          FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
          FASTLANE_SESSION: ${{ secrets.FASTLANE_SESSION }}

      - name: Clean up
        if: always()
        run: |
          security delete-keychain build.keychain || true

      - name: Upload Build Artifacts
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: |
            ios/fastlane/logs/
            ios/build/
          retention-days: 7

  notify-deployment:
    needs: build-and-deploy-ios
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: Notify Success
        if: needs.build-and-deploy-ios.result == 'success'
        run: |
          echo "✅ iOS app successfully deployed to TestFlight!"
          echo "Build completed at $(date)"
          
      - name: Notify Failure
        if: needs.build-and-deploy-ios.result == 'failure'
        run: |
          echo "❌ iOS deployment failed!"
          echo "Check the build logs for more details."
