name: iOS App Store Review Submission

on:
  push:
    branches: 
      - production
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to submit for review'
        required: true
        type: string
      release_notes:
        description: 'Release notes for this version'
        required: true
        type: string

env:
  NODE_VERSION: '18'
  RUBY_VERSION: '3.1'

jobs:
  build-and-submit:
    runs-on: macos-latest
    timeout-minutes: 60
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true

      - name: Cache CocoaPods
        uses: actions/cache@v4
        with:
          path: ios/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('ios/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Run tests
        run: npm test -- --coverage --watchAll=false

      - name: Run ESLint
        run: npm run lint

      - name: Install CocoaPods dependencies
        run: |
          cd ios
          pod install --repo-update

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Configure version and build number
        run: |
          if [ "${{ github.event_name }}" == "push" ] && [ "${{ startsWith(github.ref, 'refs/tags/') }}" == "true" ]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          elif [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            VERSION="${{ github.event.inputs.version }}"
          else
            VERSION=$(cat package.json | grep '"version"' | cut -d'"' -f4)
          fi
          
          BUILD_NUMBER=${{ github.run_number }}
          
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "BUILD_NUMBER=$BUILD_NUMBER" >> $GITHUB_ENV
          
          # Update Info.plist with new version and build number
          /usr/libexec/PlistBuddy -c "Set :CFBundleShortVersionString $VERSION" ios/PureHeart/Info.plist
          /usr/libexec/PlistBuddy -c "Set :CFBundleVersion $BUILD_NUMBER" ios/PureHeart/Info.plist

      - name: Import Code-Signing Certificates
        uses: Apple-Actions/import-codesign-certs@v2
        with:
          p12-file-base64: ${{ secrets.IOS_DIST_SIGNING_KEY }}
          p12-password: ${{ secrets.IOS_DIST_SIGNING_KEY_PASSWORD }}

      - name: Import Provisioning Profile
        uses: Apple-Actions/download-provisioning-profiles@v1
        with:
          bundle-id: ${{ secrets.IOS_BUNDLE_ID }}
          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}

      - name: Build iOS App
        run: |
          cd ios
          xcodebuild \
            -workspace PureHeart.xcworkspace \
            -scheme PureHeart \
            -configuration Release \
            -destination generic/platform=iOS \
            -archivePath PureHeart.xcarchive \
            clean archive \
            CODE_SIGN_STYLE=Manual \
            PROVISIONING_PROFILE_SPECIFIER="${{ secrets.IOS_PROVISIONING_PROFILE_NAME }}" \
            CODE_SIGN_IDENTITY="iPhone Distribution" \
            DEVELOPMENT_TEAM="${{ secrets.IOS_TEAM_ID }}"

      - name: Export IPA
        run: |
          cd ios
          
          # Create export options plist
          cat > ExportOptions.plist << EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
              <key>method</key>
              <string>app-store</string>
              <key>teamID</key>
              <string>${{ secrets.IOS_TEAM_ID }}</string>
              <key>uploadBitcode</key>
              <false/>
              <key>uploadSymbols</key>
              <true/>
              <key>compileBitcode</key>
              <false/>
          </dict>
          </plist>
          EOF
          
          xcodebuild \
            -exportArchive \
            -archivePath PureHeart.xcarchive \
            -exportOptionsPlist ExportOptions.plist \
            -exportPath ./build

      - name: Upload to App Store Connect
        uses: Apple-Actions/upload-testflight-build@v1
        with:
          app-path: ios/build/PureHeart.ipa
          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}

      - name: Submit for App Store Review
        run: |
          # Install App Store Connect API tools
          npm install -g @apple/app-store-connect-api
          
          # Submit for review (this requires additional setup of release notes, etc.)
          echo "Build uploaded successfully. Manual submission for review required via App Store Connect."
          echo "Version: ${{ env.VERSION }}"
          echo "Build: ${{ env.BUILD_NUMBER }}"

      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ env.VERSION }}
          body: |
            ## Changes in this Release
            ${{ github.event.inputs.release_notes || 'Automated release from main branch' }}
            
            ### Build Information
            - Version: ${{ env.VERSION }}
            - Build Number: ${{ env.BUILD_NUMBER }}
            - Commit: ${{ github.sha }}
          draft: false
          prerelease: false

      - name: Upload build artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ios-appstore-build
          path: |
            ios/build/
            ios/PureHeart.xcarchive/
          retention-days: 30
